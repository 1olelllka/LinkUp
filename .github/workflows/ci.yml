name: Microservices CI

on:
  push:
    paths:
      - "backend/**"
    branches:
      - main
  pull_request:
    paths:
      - "backend/**"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [
            profile-service,
            feed-service,
            posts-service,
            stories-service,
            chat-service,
            notification-service,
            image-storage
          ]
        include:
          - service: profile-service
            language: java
          - service: feed-service
            language: java
          - service: posts-service
            language: python
          - service: stories-service
            language: java
          - service: chat-service
            language: java
          - service: notification-service
            language: java
          - service: image-storage
            language: java

    services:
      postgresql:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up JDK 17 (Java Services)
        if: matrix.language == 'java'
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Cache Maven Dependencies (Java Services)
        if: matrix.language == 'java'
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ hashFiles(format('backend/{0}/pom.xml', matrix.service)) }}
          restore-keys: maven-

      - name: Run Tests (Java Services)
        if: matrix.language == 'java'
        run: mvn test --file backend/${{ matrix.service }}/pom.xml

      - name: Set Up Python (Django Services)
        if: matrix.language == 'python'
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies (Django Services)
        if: matrix.language == 'python'
        run: |
          cd backend/${{ matrix.service }}
          pip install -r requirements.txt

      - name: Run Tests (Django Services)
        if: matrix.language == 'python'
        run: |
          cd backend/${{ matrix.service }}
          python manage.py test
